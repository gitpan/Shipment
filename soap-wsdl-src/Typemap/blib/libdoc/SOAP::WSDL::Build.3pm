.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SOAP::WSDL::Build 3"
.TH SOAP::WSDL::Build 3 "2010-10-06" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SOAP::WSDL::Build \- Module::Build subclass for running wsdl2perl during build
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In your Build.PL:
.PP
.Vb 8
\& use SOAP::WSDL::Build;
\& my $build = SOAP::WSDL::Build\->new(
\&    wsdl2perl => {
\&        location => \*(Aqwsdl/foo.wsdl\*(Aq,
\&        prefix => \*(AqSupaModule::\*(Aq,
\&    }
\& );
\& $build\->generate_build_script();
.Ve
.PP
On building/installing:
.PP
.Vb 4
\& perl Build.PL
\& perl Build
\& perl Build test
\& perl Build install
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Module::Build subclass for running wsdl2perl during the build stage. This
allows shipping of distributions based on \s-1SOAP::WSDL\s0, which do not include
generated code, but the WSDLs in question instead.
.SH "AUTHORING"
.IX Header "AUTHORING"
To use SOAP::WSDL::Build in your Build.PL scripts, do the following:
.IP "\(bu" 4
Use SOAP::WSDL::Build instead of Module::Build
.Sp
.Vb 3
\& use SOAP::WSDL::Build;
\& my $build = SOAP::WSDL::Build\->new(%options);
\& $build\->generate_build_script();
.Ve
.Sp
All standard Module::Build methods are still available.
.IP "\(bu" 4
Add the wsdl2perl configuration under the options key wsdl2perl:
.Sp
.Vb 9
\& my $build = SOAP::WSDL::Build\->new(
\&    ...
\&    wsdl2perl => {
\&        location => \*(Aqpath/to/wsdl\*(Aq,
\&        server => 1,
\&        client => 0,
\&        prefix => \*(AqMy::Project::\*(Aq
\&    }
\& );
.Ve
.SS "Options"
.IX Subsection "Options"
SOAP::WSDL::Builder accepts the following options in the wsdl2perl hash
reference:
.IP "\(bu" 4
Frequently used options
.RS 4
.IP "\(bu" 8
location
.Sp
Path to \s-1WSDL\s0 file. Required.
.IP "\(bu" 8
prefix
.Sp
Prefix to apply to all generated classes.
.IP "\(bu" 8
client
.Sp
Generate client interfaces. Defaults to 1 (true)
.IP "\(bu" 8
server
.Sp
Generate server interfaces. Defaults to 0 (false)
.IP "\(bu" 8
types
.Sp
Generate data classes. Defaults to 1 (true)
.IP "\(bu" 8
silent
.Sp
Don't tell what's being generated. Defaults to 0 (false)
.RE
.RS 4
.RE
.IP "\(bu" 4
Less frequently used options for the generation process
.RS 4
.IP "\(bu" 8
use_typemap
.Sp
Generate a typemap based parser. This option is only for compatibility with
2.00.xx versions and should not be used in any other case. Defaults to 0
(false)
.IP "\(bu" 8
typemap_include
.Sp
Code snippet to include in typemap. This option is only for compatibility with
2.00.xx versions and should not be used in any other case. Defaults to q{}
(empty string)
.IP "\(bu" 8
attribute_prefix
.Sp
Individual attribute prefix. Defaults to \*(L"$prefix\eAttributes\*(R"
.IP "\(bu" 8
interface_prefix
.Sp
Individual (client) interface prefix. Defaults to \*(L"$prefix\eInterfaces\*(R"
.IP "\(bu" 8
server_prefix
.Sp
Individual server prefix. Defaults to \*(L"$prefix\eServer\*(R"
.IP "\(bu" 8
type_prefix
.Sp
Individual (data) type prefix. Defaults to \*(L"$prefix\eTypes\*(R"
.IP "\(bu" 8
element_prefix
.Sp
Individual (data) element prefix. Defaults to \*(L"$prefix\eElements\*(R"
.IP "\(bu" 8
typemap_prefix
.Sp
Individual typemap prefix. Defaults to \*(L"$prefix\eTypemaps\*(R"
.RE
.RS 4
.RE
.IP "\(bu" 4
Options controlling LWP::UserAgent
.Sp
Use of these options is strongly discouraged for published distributions, as
it may make the distribution dependent on your environment
.RS 4
.IP "\(bu" 8
proxy
.Sp
\&\s-1HTTP\s0(s) proxy to use. Proxies can also be set ussing the \s-1HTTP_PROXY\s0 and
\&\s-1HTTPS_PROXY\s0 environment variables, which is generally a better choice for build
scripts.
.IP "\(bu" 8
keepalive
.Sp
Keppalive is only required in combination with \s-1NTLM\s0 authentication. It is not
recommended to create distributions which rely on protected documents, so
it's somewhat useless for use in Build scripts.
.RE
.RS 4
.RE
.SH "Build targets"
.IX Header "Build targets"
.SS "build"
.IX Subsection "build"
SOAP::WSDL::Build modifies the standard \*(L"build\*(R" target (invoked when running
\&\*(L"perl Build\*(R") to include the target \*(L"webservice\*(R".
.SS "webservice"
.IX Subsection "webservice"
SOAP::WSDL::Build adds the new target webservice. This build target generates
perl classes from the \s-1WSDL\s0 definitions specified.
.PP
You may run this step separately by calling
.PP
.Vb 1
\& perl Build webservice
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "wsdl2perl"
.IX Subsection "wsdl2perl"
.Vb 1
\& $builder\->wsdl2perl(%config);
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
An example is located in the distribution's examples directory in
.PP
.Vb 1
\& examples/dist
.Ve
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2004\-2009 Martin Kutter.
.PP
This file is part of SOAP-WSDL. You may distribute/modify it under the same
terms as perl itself
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Kutter <martin.kutter fen\-net.de>
.SH "REPOSITORY INFORMATION"
.IX Header "REPOSITORY INFORMATION"
.Vb 4
\& $Rev: 849 $
\& $LastChangedBy: kutterma $
\& $Id: Build.pm 849 2009\-05\-15 21:39:29Z kutterma $
\& $HeadURL: https://soap\-wsdl.svn.sourceforge.net/svnroot/soap\-wsdl/SOAP\-WSDL/branches/Typemap/lib/SOAP/WSDL/Build.pm $
.Ve
